<% content_for :breadcrumb do %>
  <li><a href="#" class="active">Segmentation</a></li>
<% end %>

<% content_for :styles do %>
  <style type="text/css">
    /* Custom CSS for this page */
    .select_segment.active {
      background: black;
    }
  </style>
<% end %>

<div class="secondary-navbar">
  <form class="navbar-form navbar-left" role="search">
    <h4>View Segmentation</h4>
  </form>
  <form class="navbar-form navbar-right" role="search">
    <a type="button" class="btn btn-info navbar-btn" href="/segmentation/new"><i class="pg-plus"></i> Add Segmentation</a>
  </form>
</div>
<br/><br/>
<div class="row">
  <div class="col-md-3 b-r b-grey sm-b-b">
    <!-- Start Table -->
    <div class="panel panel-transparent">
      <div class="panel-heading">
        <div class="panel-title">Select Segmentation
        </div>
        <div class="tools">
          <a class="collapse" href="javascript:;"></a>
          <a class="config" data-toggle="modal" href="#grid-config"></a>
          <a class="reload" href="javascript:;"></a>
          <a class="remove" href="javascript:;"></a>
        </div>
      </div>
      <div class="panel-body">
        <table class="table table-hover table-condensed" id="condensedTable">
          <thead>
            <tr role="row">
              <th aria-sort="ascending" aria-label="Title: activate to sort column descending" colspan="1" rowspan="1" aria-controls="condensedTable" tabindex="0" class="sorting_asc" style="width:100%">Title</th>
            </tr>
          </thead>
          <tbody id="segmentations_list">
            <!-- Place Segmentation List Here -->
          </tbody>
        </table>
      </div>
    </div>
    <!-- End Table -->
  </div>
  <div class="col-md-9">
    <!-- Start Panel -->
    <div class="panel panel-transparent">
      <div class="panel-heading">
        <div class="panel-title">
          <div id="chart_title"></div>
        </div>
        <div class="pull-right">
          <span><input type="text" name="daterange" id="daterange" placeholder="Select Date"></span>
        </div>
      </div>
      <div class="panel-body">
        <div id="chartdiv" style="width: 100%; height: 500px;"></div>
      </div>
    </div>
    <!-- End Panel -->
  </div>
</div>

<!-- START ROW -->
<div class="row">
  <div class="col-md-12 m-b-10">
    <div class="panel no-border panel-default no-margin widget-loader-circle">
      <div class="panel-heading p-l-30 p-t-30 p-r-30">
        <div class="pull-left">
          <div class="panel-title">Segmentation Table
          </div>
        </div>
        <div class="clearfix"></div>
      </div>
      <div class="p-l-30 p-r-30 p-b-30">
        <table class="table table-hover " id="rankingTable">
          <thead>
            <tr>
              <th class="hint-text fs-11 col-xs-5">Date</th>
              <th class="hint-text fs-11">Absolute Value</th>
              <th class="hint-text fs-11">Percentage</th>
            </tr>
          </thead>
          <tbody id="tableData">
            <!-- Append Rows into it -->
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>
<!-- END ROW -->

<% content_for :scripts do %>
  <script type="text/javascript">
  	// Custom JS for this page only
    var chart;
    var chartData = [];
    var trendLine1;
    var trendLine2;

    var table = $('#rankingTable');
    var tableData = [];
    var settings = {
        "sDom": "<'table-responsive't><'row'<p i>>",
        "destroy": true,
        "autoWidth" : false,
        "scrollCollapse": true,
        "oLanguage": {
            "sLengthMenu": "_MENU_ ",
            "sInfo": "Showing <b>_START_ to _END_</b> of _TOTAL_ entries"
        },
        "iDisplayLength": 5,
        "data": tableData
    };
    table.dataTable(settings);

    var table_nav = $('#condensedTable');
    var settings_nav_table = {
      "sDom": "<'table-responsive't><'row'<p i>>",
        "destroy": true,
        "autoWidth" : true,
        "scrollCollapse": true,
        "oLanguage": {
            "sLengthMenu": "_MENU_ ",
            "sInfo": ""
        },
        "paging": false,
        "scrollY": 400,
        "scrollX": 0
    }

    $('#segmentations_list').on('click', 'tr.select_segment', function() {
      let slugName = $(this).data('slugname');
      let chartName = $(this).data('name');
      generateChartData(slugName, chartName, null, null);
      $(".select_segment").each(function(){
        $(this).removeClass("active");
      });
      $(this).addClass("active");
    });

    // Callback when date changes
    $('#daterange').on('apply.daterangepicker', function(ev, picker){

      let start_time = picker.startDate.format('YYYY/MM/DD h:mm:ss a');
      let end_time = picker.endDate.format('YYYY/MM/DD h:mm:ss a');

      $(this).val(start_time + ' - ' + end_time);

      let slugName = $(".select_segment.active").data('slugname');
      let chartName = $(".select_segment.active").data('name');
      generateChartData(slugName, chartName, start_time, end_time);
    });

    function generateChartData(slug_name, name, start_time, end_time) {

      args = {
        segmentName: slug_name,
        startTime: start_time,
        endTime: end_time
      }

      $.getJSON('/segmentation/graph_data', 
      args, 
        function(response){
          $('#tableData').html("");
          chartData = [];
          tableData = [];
          $.each( response, function( key, value ) {
            json = {
              date: new Date(value['ts']),
              abs: parseInt(value['abs']),
              perc: parseFloat(value['perc'].toFixed(2))
            };
            arr = [json['date'], json['abs'], json['perc']];

            chartData.push(json);
            tableData.push(arr);
          });
          
          var last_index = chartData.length - 1;
          var initElement = chartData[0];
          var lastElement = chartData[last_index];
          add_trendline(trendLine1, initElement['date'], lastElement['date'], initElement['abs'], lastElement['abs']);

          add_trendline(trendLine2, initElement['date'], lastElement['date'], initElement['perc'], lastElement['perc']);

          chart.dataProvider = chartData;
          chart.validateData();

          var tabledata = table.dataTable().api();
          tabledata.clear();
          tabledata.rows.add(tableData);
          tabledata.draw();

        }
      );

      $('#chart_title').html("<h2>"+name+"</h2>");
    }

    function add_trendline( trendLine, initDate, finalDate, initValue, finalValue){
      // TREND LINES
      // first trend line
      
      // note,when creating date objects 0 month is January, as months are zero based in JavaScript.
      trendLine.initialDate = initDate; // 12 is hour - to start trend line in the middle of the day
      trendLine.finalDate = finalDate;
      trendLine.initialValue = initValue;
      trendLine.finalValue = finalValue;
    }

    $(function() {

      AmCharts.ready(function () {
        chart = new AmCharts.AmSerialChart();
        chart.dataProvider = chartData;
        chart.categoryField = "date";
        chart.synchronizeGrid = true; // this makes all axes grid to be at the same intervals

        // AXES
        // category
        var categoryAxis = chart.categoryAxis;
        categoryAxis.parseDates = true;
        categoryAxis.minPeriod = "DD";
        categoryAxis.minorGridEnabled = true;
        categoryAxis.axisColor = "#DADADA";
        categoryAxis.twoLineMode = true;
        categoryAxis.title = "DATE TIME";
        categoryAxis.dateFormats = [{
              period: 'fff',
              format: 'JJ:NN:SS'
          }, {
              period: 'ss',
              format: 'JJ:NN:SS'
          }, {
              period: 'mm',
              format: 'JJ:NN'
          }, {
              period: 'hh',
              format: 'JJ:NN'
          }, {
              period: 'DD',
              format: 'DD'
          }, {
              period: 'WW',
              format: 'DD'
          }, {
              period: 'MM',
              format: 'MMM'
          }, {
              period: 'YYYY',
              format: 'YYYY'
          }];

        // first value axis (on the left)
        var valueAxis1 = new AmCharts.ValueAxis();
        valueAxis1.axisColor = "#FF0000";
        valueAxis1.axisThickness = 3;
        valueAxis1.title = "ABSOLUTE VALUE";
        chart.addValueAxis(valueAxis1);

        // second value axis (on the right)
        var valueAxis2 = new AmCharts.ValueAxis();
        valueAxis2.position = "right"; // this line makes the axis to appear on the right
        valueAxis2.axisColor = "#0055FF";
        valueAxis2.axisThickness = 3;
        valueAxis2.title = "PERCENTAGE";
        chart.addValueAxis(valueAxis2);

        // GRAPHS
        // first graph
        var graph1 = new AmCharts.AmGraph();
        graph1.valueAxis = valueAxis1; // we have to indicate which value axis should be used
        graph1.title = "Absolute Value";
        graph1.valueField = "abs";
        graph1.bullet = "round";
        graph1.hideBulletsCount = 30;
        graph1.bulletBorderThickness = 3;
        graph1.lineColor = "#FF0000";
        chart.addGraph(graph1);

        // second graph
        var graph2 = new AmCharts.AmGraph();
        graph2.valueAxis = valueAxis2; // we have to indicate which value axis should be used
        graph2.title = "Percentage";
        graph2.valueField = "perc";
        graph2.bullet = "square";
        graph2.hideBulletsCount = 30;
        graph2.bulletBorderThickness = 3;
        graph2.lineColor = "#0055FF";
        chart.addGraph(graph2);

        trendLine1 = new AmCharts.TrendLine();
        trendLine1.dashLength = 8;
        trendLine1.lineColor = "#980000";
        trendLine1.valueAxis = valueAxis1;
        chart.addTrendLine(trendLine1);

        trendLine2 = new AmCharts.TrendLine();
        trendLine2.dashLength = 8;
        trendLine2.lineColor = "#0044BB";
        trendLine2.valueAxis = valueAxis2;
        chart.addTrendLine(trendLine2);

        // CURSOR
        var chartCursor = new AmCharts.ChartCursor();
        chartCursor.cursorAlpha = 0.1;
        chartCursor.fullWidth = true;
        chartCursor.valueLineBalloonEnabled = true;
        chart.addChartCursor(chartCursor);

        // SCROLLBAR
        var chartScrollbar = new AmCharts.ChartScrollbar();
        chart.addChartScrollbar(chartScrollbar);

        // LEGEND
        var legend = new AmCharts.AmLegend();
        legend.marginLeft = 110;
        legend.useGraphSettings = true;
        chart.addLegend(legend);

        // WRITE
        chart.write("chartdiv");

      });

      var html = "";

      $.getJSON('/segmentation/all', null, function(response){
        for (x in response.data) {
          html += "<tr class='select_segment' data-name='"+response.data[x].name+"' data-slugname='"+response.data[x].name_slug+"'><td class='v-align-middle semi-bold'>"+response.data[x].name+"</td></tr>";
        }
        $("#segmentations_list").html(html);
        table_nav.dataTable(settings_nav_table);
        if(response.data[0] != null){
          $('.select_segment').first().click();
        } else {
          $('#chart_title').html("<h3>No Segmentation Found</h3>");
        }
      });

      let today = new Date();
      let yesterday = new Date();
      yesterday.setDate(today.getDate() - 1);
      let last7day = new Date();
      last7day.setDate(today.getDate() - 7);
      $('#daterange').daterangepicker({
        "ranges": {
          "Today": [ today, today],
          "Last 1 Day": [ yesterday, today],
          "Last 7 Days": [ last7day, today]
        },
        "timePicker": true,
        "opens": "left",
        "startDate": today,
        "endDate": yesterday,
        "maxDate":new Date()
      });
      
    });

  </script>
<% end %>
