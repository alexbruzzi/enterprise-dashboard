<% content_for :breadcrumb do %>
  <li><a href="#" class="active">Segmentation</a></li>
<% end %>

<% content_for :styles do %>
  <style type="text/css">
    /* Custom CSS for this page */
    .select_segment.active {
      background: black;
    }
  </style>
<% end %>

<div class="secondary-navbar">
  <form class="navbar-form navbar-left" role="search">
    <h4>View Segmentation</h4>
  </form>
  <form class="navbar-form navbar-right" role="search">
    <a type="button" class="btn btn-info navbar-btn" href="/segmentation/new"><i class="pg-plus"></i> Add Segmentation</a>
  </form>
</div>
<br/><br/>
<div class="row">
  <div class="col-md-3 b-r b-grey sm-b-b">
    <!-- Start Table -->
    <div class="panel panel-transparent">
      <div class="panel-heading">
        <div class="panel-title">Select Segmentation
        </div>
        <div class="tools">
          <a class="collapse" href="javascript:;"></a>
          <a class="config" data-toggle="modal" href="#grid-config"></a>
          <a class="reload" href="javascript:;"></a>
          <a class="remove" href="javascript:;"></a>
        </div>
      </div>
      <div class="panel-body">
        <div class="table-responsive">
          <table class="table table-hover table-condensed" id="condensedTable">
            <thead>
              <tr role="row">
                <th aria-sort="ascending" aria-label="Title: activate to sort column descending" colspan="1" rowspan="1" aria-controls="condensedTable" tabindex="0" class="sorting_asc" style="width:100%">Title</th>
              </tr>
            </thead>
            <tbody id="segmentations_list">
              <!-- Place Segmentation List Here -->
            </tbody>
          </table>
        </div>
      </div>
    </div>
    <!-- End Table -->
  </div>
  <div class="col-md-9">
    <center>
      <div id="chart_title"></div>
      <div id="chartdiv" style="width: 100%; height: 500px;"></div>
    </center>
  </div>
</div>

<% content_for :scripts do %>
  <script type="text/javascript">
  	// Custom JS for this page only
    var chart;
    var chartData = [];

    $('#segmentations_list').on('click', 'tr.select_segment', function() {
      generateChartData($(this).data('slugname'), $(this).data('name'));

      $(".select_segment").each(function(){
        $(this).removeClass("active");
      });
      $(this).addClass("active");
    });

    // generate some random data, quite different range
    function generateChartData(slug_name, name) {

      $.getJSON('/segmentation/graph_data', 
        {segmentName: slug_name}, 
        function(response){
          $.each( response.reverse(), function( key, value ) {
            json = {
              date: new Date(value['ts']),
              abs: parseInt(value['abs']),
              perc: parseFloat(value['perc'].toFixed(2))
            };
            chartData.push(json);
          });
          
          var last_index = chartData.length - 1;
          var initElement = chartData[0];
          var lastElement = chartData[last_index];
          add_trendline(initElement['date'], lastElement['date'], initElement['abs'], lastElement['abs'], "#FF6600");

          // add_trendline(initElement['date'], lastElement['date'], initElement['perc'], lastElement['perc'], "#FCD202");          

          chart.dataProvider = chartData;
          chart.validateData();

        }
      );

      
      $('#chart_title').html("<h2>"+name+"</h2>");
    }

    function add_trendline(initDate, finalDate, initValue, finalValue, color="#CC0000"){
      // TREND LINES
      // first trend line
      var trendLine = new AmCharts.TrendLine();
      // note,when creating date objects 0 month is January, as months are zero based in JavaScript.
      trendLine.initialDate = initDate; // 12 is hour - to start trend line in the middle of the day
      trendLine.finalDate = finalDate;
      trendLine.initialValue = initValue;
      trendLine.finalValue = finalValue;
      trendLine.lineColor = color;//"#CC0000";
      chart.addTrendLine(trendLine);
    }

    $(function() {

      AmCharts.ready(function () {
        chart = new AmCharts.AmSerialChart();
        chart.dataProvider = chartData;
        chart.categoryField = "date";
        chart.synchronizeGrid = true; // this makes all axes grid to be at the same intervals

        // AXES
        // category
        var categoryAxis = chart.categoryAxis;
        categoryAxis.parseDates = true; // as our data is date-based, we set parseDates to true
        categoryAxis.minPeriod = "DD"; // our data is daily, so we set minPeriod to DD
        categoryAxis.minorGridEnabled = true;
        categoryAxis.axisColor = "#DADADA";
        categoryAxis.twoLineMode = true;
        categoryAxis.dateFormats = [{
              period: 'fff',
              format: 'JJ:NN:SS'
          }, {
              period: 'ss',
              format: 'JJ:NN:SS'
          }, {
              period: 'mm',
              format: 'JJ:NN'
          }, {
              period: 'hh',
              format: 'JJ:NN'
          }, {
              period: 'DD',
              format: 'DD'
          }, {
              period: 'WW',
              format: 'DD'
          }, {
              period: 'MM',
              format: 'MMM'
          }, {
              period: 'YYYY',
              format: 'YYYY'
          }];

        // first value axis (on the left)
        var valueAxis1 = new AmCharts.ValueAxis();
        valueAxis1.axisColor = "#FF6600";
        valueAxis1.axisThickness = 2;
        chart.addValueAxis(valueAxis1);

        // second value axis (on the right)
        var valueAxis2 = new AmCharts.ValueAxis();
        valueAxis2.position = "right"; // this line makes the axis to appear on the right
        valueAxis2.axisColor = "#FCD202";
        valueAxis2.gridAlpha = 0;
        valueAxis2.axisThickness = 2;
        chart.addValueAxis(valueAxis2);

        // GRAPHS
        // first graph
        var graph1 = new AmCharts.AmGraph();
        graph1.valueAxis = valueAxis1; // we have to indicate which value axis should be used
        graph1.title = "Absolute Value";
        graph1.valueField = "abs";
        graph1.bullet = "round";
        graph1.hideBulletsCount = 30;
        graph1.bulletBorderThickness = 1;
        chart.addGraph(graph1);

        // second graph
        var graph2 = new AmCharts.AmGraph();
        graph2.valueAxis = valueAxis2; // we have to indicate which value axis should be used
        graph2.title = "Percentage";
        graph2.valueField = "perc";
        graph2.bullet = "square";
        graph2.hideBulletsCount = 30;
        graph2.bulletBorderThickness = 1;
        chart.addGraph(graph2);

        // CURSOR
        var chartCursor = new AmCharts.ChartCursor();
        chartCursor.cursorAlpha = 0.1;
        chartCursor.fullWidth = true;
        chartCursor.valueLineBalloonEnabled = true;
        chart.addChartCursor(chartCursor);

        // SCROLLBAR
        var chartScrollbar = new AmCharts.ChartScrollbar();
        chart.addChartScrollbar(chartScrollbar);

        // LEGEND
        var legend = new AmCharts.AmLegend();
        legend.marginLeft = 110;
        legend.useGraphSettings = true;
        chart.addLegend(legend);

        // WRITE
        chart.write("chartdiv");
      });


      var html = "";

      $.getJSON('/segmentation/all', null, function(response){
        for (x in response.data) {
          html += "<tr class='select_segment' data-name='"+response.data[x].name+"' data-slugname='"+response.data[x].name_slug+"'><td class='v-align-middle semi-bold'>"+response.data[x].name+"</td></tr>";
        }
        $("#segmentations_list").html(html);
        if(response.data[0] != null){
          // get_graph_data(response.data[0].name_slug, response.data[0].name);
        } else {
          $('#chart_title').html("<h3>No Funnel Found</h3>");
        }
      });
      
    });

    // this method is called when chart is first inited as we listen for "dataUpdated" event
    function zoomChart() {
      // different zoom methods can be used - zoomToIndexes, zoomToDates, zoomToCategoryValues
      chart.zoomToDates(new Date(1972, 0), new Date(1984, 0));
    }

  </script>
<% end %>